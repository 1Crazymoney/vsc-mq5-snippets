{
    "IndicatorRelease": {
        "body": "IndicatorRelease(${1:indicator_handle});",
        "description": "MT5: Releases indicator handler",
        "prefix": "IndicatorRelease",
        "scope": "source.mq4"
    },
    "CustomIndicator": {
        "body": "${1:handle} = iCustom(${2:_Symbol}, ${3:_Period}, \"::Indicators\\\\\\\\${4:indicatorName}\", ${5:params});",
        "description": "MT5: Create custom indicator",
        "prefix": "CustomIndicator",
        "scope": "source.mq4"
    },
    "CopyBuffer": {
        "body": 
        [
            "double ${5:buffer}[${4:count}];",
            "if (CopyBuffer(${1:indicator_handle}, ${2:buffer_num}, ${3:start_pos_or_time}, ${4:count}, ${5:buffer}) == ${4:count})",
            "{",
            "}"
        ],
        "description": "MT5: Copy indicator's buffer",
        "prefix": "CopyBuffer",
        "scope": "source.mq4"
    },
    "OnCalculate": {
        "body":
        [
            "int OnCalculate(const int rates_total,       // size of input time series",
            "                const int prev_calculated,   // number of handled bars at the previous call",
            "                const datetime& time[],      // Time array",
            "                const double& open[],        // Open array",
            "                const double& high[],        // High array",
            "                const double& low[],         // Low array",
            "                const double& close[],       // Close array",
            "                const long& tick_volume[],   // Tick Volume array",
            "                const long& volume[],        // Real Volume array",
            "                const int& spread[]          // Spread array",
            ")",
            "{",
            "   for (int pos = prev_calculated; pos < rates_total; ++pos)",
            "   {",
            "   }",
            "   return rates_total;",
            "}"
        ],
        "description": "MT5: OnCalculate function",
        "prefix": "OnCalculate",
        "scope": "source.mq4"
    },
    "OnInit": {
        "body":
        [
            "string IndicatorName;",
            "string IndicatorObjPrefix;",
            "string GenerateIndicatorName(const string target)",
            "{",
            "   string name = target;",
            "   return name;",
            "}",
            "int OnInit(void)",
            "{",
            "   IndicatorName = GenerateIndicatorName(\"${1:Name}\");",
            "   IndicatorObjPrefix = \"__\" + IndicatorName + \"__\";",
            "   IndicatorSetString(INDICATOR_SHORTNAME, IndicatorName);",
            "   IndicatorSetInteger(INDICATOR_DIGITS, Digits());",
            "   return INIT_SUCCEEDED;//INIT_FAILED",
            "}"
        ],
        "description": "MT5: OnInit function",
        "prefix": "OnInit",
        "scope": "source.mq4"
    },
    "OnDeinit": {
        "body":
        [
            "void OnDeinit(const int reason)",
            "{",
            "   ObjectsDeleteAll(0, IndicatorObjPrefix);",
            "}"
        ],
        "description": "MT5: OnDeinit function",
        "prefix": "OnDeinit",
        "scope": "source.mq4"
    },
    "enumDrawType": {
        "body":
        [
            "${1|DRAW_NONE,DRAW_LINE,DRAW_SECTION,DRAW_HISTOGRAM,DRAW_HISTOGRAM2,DRAW_ARROW,DRAW_ZIGZAG,DRAW_FILLING,DRAW_BARS,DRAW_CANDLES,DRAW_COLOR_LINE,DRAW_COLOR_SECTION,DRAW_COLOR_HISTOGRAM,DRAW_COLOR_HISTOGRAM2,DRAW_COLOR_ARROW,DRAW_COLOR_ZIGZAG,DRAW_COLOR_BARS,DRAW_COLOR_CANDLES|}"
        ],
        "description": "MT5: Lookup PLOT_DRAW_TYPE value",
        "prefix": "enumDrawType",
        "scope": "source.mq4"
    },
    "createTextObject": {
        "body":
        [
            "string ${1:id} = IndicatorObjPrefix + \"${2:textId}\";",
            "if (ObjectFind(${3:chart_ID}, ${1:id}) == -1)",
            "{",
            "   if (ObjectCreate(${3:chart_ID}, ${1:id}, OBJ_TEXT, ${4:sub_window}, ${5:time}, ${6:price}))",
            "   {",
            "      ObjectSetString(${3:chart_ID}, ${1:id}, OBJPROP_FONT, ${7:font});",
            "      ObjectSetInteger(${3:chart_ID}, ${1:id}, OBJPROP_FONTSIZE, ${8:font_size});",
            "      ObjectSetInteger(${3:chart_ID}, ${1:id}, OBJPROP_COLOR, ${9:clr});",
            "      ObjectSetDouble(${3:chart_ID}, ${1:id}, OBJPROP_ANGLE, ${11:angle});",
            "      ObjectSetInteger(${3:chart_ID}, ${1:id}, OBJPROP_ANCHOR, ${12:anchor});",
            "      ObjectSetInteger(${3:chart_ID}, ${1:id}, OBJPROP_BACK, ${13:back});",
            "      ObjectSetInteger(${3:chart_ID}, ${1:id}, OBJPROP_SELECTABLE, ${14:selection});",
            "      ObjectSetInteger(${3:chart_ID}, ${1:id}, OBJPROP_SELECTED, ${15:selection});",
            "      ObjectSetInteger(${3:chart_ID}, ${1:id}, OBJPROP_HIDDEN, ${16:hidden});",
            "      ObjectSetInteger(${3:chart_ID}, ${1:id}, OBJPROP_ZORDER, ${17:z_order});",
            "   }",
            "}",
            "ObjectSetString(${3:chart_ID}, ${1:id}, OBJPROP_TEXT, ${10:text});"
        ],
        "description": "MT5: Lookup PLOT_DRAW_TYPE value",
        "prefix": "createTextObject",
        "scope": "source.mq4"
    }
}
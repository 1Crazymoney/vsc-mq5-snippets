{
    "IndicatorRelease": {
        "body": "IndicatorRelease(${1:indicator_handle});",
        "description": "MT5: Releases indicator handler",
        "prefix": "IndicatorRelease",
        "scope": "source.mq4"
    },
    "OnCalculate": {
        "body":
        [
            "int OnCalculate(const int rates_total,       // size of input time series",
            "                const int prev_calculated,   // number of handled bars at the previous call",
            "                const datetime& time[],      // Time array",
            "                const double& open[],        // Open array",
            "                const double& high[],        // High array",
            "                const double& low[],         // Low array",
            "                const double& close[],       // Close array",
            "                const long& tick_volume[],   // Tick Volume array",
            "                const long& volume[],        // Real Volume array",
            "                const int& spread[]          // Spread array",
            ")",
            "{",
            "   for (int pos = prev_calculated; pos < rates_total; ++pos)",
            "   {",
            "   }",
            "   return rates_total;",
            "}"
        ],
        "description": "MT5: OnCalculate function",
        "prefix": "OnCalculate",
        "scope": "source.mq4"
    },
    "OnInit": {
        "body":
        [
            "string IndicatorName;",
            "string IndicatorObjPrefix;",
            "string GenerateIndicatorName(const string target)",
            "{",
            "   string name = target;",
            "   return name;",
            "}",
            "int OnInit(void)",
            "{",
            "   IndicatorName = GenerateIndicatorName(\"{1:Name}\");",
            "   IndicatorObjPrefix = \"__\" + IndicatorName + \"__\";",
            "   IndicatorSetString(INDICATOR_SHORTNAME, IndicatorName);",
            "   IndicatorSetInteger(INDICATOR_DIGITS, Digits());",
            "   return INIT_SUCCEEDED;//INIT_FAILED",
            "}"
        ],
        "description": "MT5: OnInit function",
        "prefix": "OnInit",
        "scope": "source.mq4"
    },
    "OnDeinit": {
        "body":
        [
            "void OnDeinit(const int reason)",
            "{",
            "   ObjectsDeleteAll(0, IndicatorObjPrefix);",
            "}"
        ],
        "description": "MT5: OnDeinit function",
        "prefix": "OnDeinit",
        "scope": "source.mq4"
    }
}